name: Docker Build and Publish

on:
  push:   
    # Publish semver tags as releases.
    tags: [ 'v*' ] # Push events to matching v*, i.e. v1.0, v1.0.1
    
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # Base Image Version to use
  BASE_IMAGE_VERSION: v2.2.0
  # Tag Version which triggered the build
  IMAGE_TAG: ${{  github.ref_name }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        cmd:
          - arch: arm32v6            
            platforms: linux/arm/v6
          - arch: arm64v8
            platforms: linux/arm64/v8
          - arch: amd64            
            platforms: linux/amd64
                      
    permissions:
      contents: read
      packages: write      
      id-token: write

    steps:   
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
     
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      #- name: Login to Docker Hub
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
         
      - name: Lower case repository name
        run: |
          echo "IMAGE_REPO=${REPO,,}" >>${GITHUB_ENV}
        env:
          REPO: '${{ github.repository }}'

      - name: Build and push Docker images
        id: build-and-push    
        run: |
          docker buildx build . -f Dockerfile --platform ${{ matrix.cmd.platforms }} --push \
          -t ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:${{ matrix.cmd.arch }}-${{ env.IMAGE_TAG }} \
          -t ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:${{ matrix.cmd.arch }}-latest \
          --build-arg FROM_IMAGE=certbot/certbot:${{ matrix.cmd.arch }}-${{ env.BASE_IMAGE_VERSION }}

      - name: Sleep for 30 seconds
        run: sleep 30s
        shell: bash
          
      - name: Link to latest tag
        id: link-tag
        run: |
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:latest \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:amd64-latest \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:arm32v6-latest \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:arm64v8-latest
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_REPO }}:latest
